@page "/exercise/detail/{ExerciseId:int}"

@inject IExercisePlanService _exerciseService

<h1 class="text text-primary">Exercise Plan Details</h1>

@if (exercisePlanDetail is null)
{
    <p class="text-warning">There is no information.</p>
}
else
{
    <div class="container">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <span>Exercise #@exercisePlanDetail.ExerciseId</span>
            </div>
            <div class="card-body">
                <h4 class="card-title">@exercisePlanDetail.Name</h4>
                <p class="card-title">Exercise Type: @exercisePlanDetail.ExerciseType</p>
                <p class="card-title">Muscles Activated: @exercisePlanDetail.MusclesActivated</p>
            </div>
        </div>
        <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content-between w-25">
                <a href="/exercise/edit/@exercisePlanDetail.ExerciseId" class="btn btn-outline-primary">Edit</a>
                <a href="/exercise/delete/@exercisePlanDetail.ExerciseId" class="btn btn-outline-danger">Delete</a>
                <a href="/exercise" class="btn btn-secondary m-2">Back to Index</a>
            </div>
        </div>
    </div>
}

@code{
    [Parameter]
    public int ExerciseId { get; set; }
    public ExercisePlanDetail? exercisePlanDetail { get; set; }
    protected override async Task OnInitializedAsync()
    {
        exercisePlanDetail = await _exerciseService.GetExercisePlan(ExerciseId);
    }
}