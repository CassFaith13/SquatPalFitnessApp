@page "/exercise/delete/{ExercisePlanId:int}"

@inject IExercisePlanService _exerciseService
@inject NavigationManager _navManager

<h2 class="text text-danger text-center">Are you sure you want to delete this Exercise?</h2>

@if (exercisePlanDetail is null)
{
    <p class="text-warning">There is no information on this Exercise</p>
}
else
{
    <div class="container">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <span>Exercise Plan #@exercisePlanDetail.ExercisePlanId</span>
            </div>
            <div class="card-body">
                <h4 class="card-title">@exercisePlanDetail.Name</h4>
                <p class="card-text">Exercise Type: @exercisePlanDetail.ExerciseType</p>
                <p class="card-text">Workout #1: @exercisePlanDetail.WorkoutOne</p>
                <p class="card-text">Workout #2: @exercisePlanDetail.WorkoutTwo</p>
                <p class="card-text">Workout #3: @exercisePlanDetail.WorkoutThree</p>
                <p class="card-text">Workout #4: @exercisePlanDetail.WorkoutFour</p>
                <p class="card-text">Workout #5: @exercisePlanDetail.WorkoutFive</p>
                <p class="card-text">Muscles Activated: @exercisePlanDetail.MusclesActivated</p>
            </div>
        </div>
        <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content-between w-25">
                <button type="submit" class="btn btn-danger" @onclick="DeleteExercisePlan">Delete</button>
                <a href="/exercise" class="btn btn-secondary mt-2">Back to Index</a>
            </div>
        </div>
    </div>
}

@code{
    [Parameter]
    public int ExercisePlanId { get; set; }
    public ExercisePlanDetail? exercisePlanDetail { get; set; }
    private string? errorMessage { get; set; }
    protected override async Task OnInitializedAsync()
    {
        exercisePlanDetail = await _exerciseService.GetExercisePlan(ExercisePlanId);
    }
    public async Task DeleteExercisePlan()
    {
        var isSuccess = await _exerciseService.DeleteExercisePlan(ExercisePlanId);
        if (isSuccess)
        {
            _navManager.NavigateTo("/exercise");
        }
        else
        {
            errorMessage = "Unable to delete Exercise!";
        }
    }
}