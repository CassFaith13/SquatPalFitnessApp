// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SquatPal.Data.DatabaseContext;

#nullable disable

namespace SquatPal.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230317215542_Migration_Init")]
    partial class Migration_Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SquatPal.Data.Entities.AdminUser", b =>
                {
                    b.Property<int>("AdminUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminUserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminUserId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("SquatPal.Data.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GoalWeight")
                        .HasColumnType("int");

                    b.Property<int>("HeightInches")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MembershipId")
                        .HasColumnType("int");

                    b.Property<int>("WeightLbs")
                        .HasColumnType("int");

                    b.HasKey("ClientId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("MembershipId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("SquatPal.Data.Entities.ExercisePlan", b =>
                {
                    b.Property<int>("ExercisePlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExercisePlanId"));

                    b.Property<string>("ExerciseType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MusclesActivated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkoutFive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkoutFour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkoutOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkoutThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkoutTwo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExercisePlanId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("SquatPal.Data.Entities.MembershipTier", b =>
                {
                    b.Property<int>("MembershipTierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MembershipTierId"));

                    b.Property<string>("Benefits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("MembershipTierId");

                    b.ToTable("Memberships");
                });

            modelBuilder.Entity("SquatPal.Data.Entities.Client", b =>
                {
                    b.HasOne("SquatPal.Data.Entities.ExercisePlan", "ExercisePlan")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SquatPal.Data.Entities.MembershipTier", "MembershipTier")
                        .WithMany()
                        .HasForeignKey("MembershipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExercisePlan");

                    b.Navigation("MembershipTier");
                });
#pragma warning restore 612, 618
        }
    }
}
