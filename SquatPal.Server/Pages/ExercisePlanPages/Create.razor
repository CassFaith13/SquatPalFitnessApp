@page "/exercise/create"

<h1 class="text text-primary">Create an Exercise</h1>

@inject IExercisePlanService _exerciseService
@inject NavigationManager _navManager

@if (errorMessage != null)
{
    <h5 class="text-danger">@errorMessage</h5>
}
else
{
    <EditForm Model="@model" OnValidSubmit="@HandleSubmit">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <div class="form-group">
            <label>Name</label>
            <InputText class="form-control" @bind-Value="@model.Name"></InputText>
        </div>
        <div class="form-group">
            <label>Type of Exercise</label>
            <InputText class="form-control" @bind-Value="@model.ExerciseType"></InputText>
        </div>
        <div class="form-group">
            <label>Workout #1</label>
            <InputText class="form-control" @bind-Value="@model.WorkoutOne"></InputText>
        </div>
        <div class="form-group">
            <label>Workout #2</label>
            <InputText class="form-control" @bind-Value="@model.WorkoutTwo"></InputText>
        </div>
        <div class="form-group">
            <label>Workout #3</label>
            <InputText class="form-control" @bind-Value="@model.WorkoutThree"></InputText>
        </div>
        <div class="form-group">
            <label>Workout #4</label>
            <InputText class="form-control" @bind-Value="@model.WorkoutFour"></InputText>
        </div>
        <div class="form-group">
            <label>Workout #5</label>
            <InputText class="form-control" @bind-Value="@model.WorkoutFive"></InputText>
        </div>
        <div class="form-group">
            <label>Muscles Activated</label>
            <InputText class="form-control" @bind-Value="@model.MusclesActivated"></InputText>
        </div>
        <div class="d-flex justify-content-center mt-2">
            <button type="submit" class="btn btn-primary btn-block mt-3">Submit</button>
        </div>
    </EditForm>
}

@code{
    private ExercisePlanCreate model = new();
    private string? errorMessage;
    public async Task HandleSubmit()
    {
        var isSuccess = await _exerciseService.CreateExercisePlan(model);
        if (isSuccess)
        {
            _navManager.NavigateTo("/exercise");
        }
        else
        {
            errorMessage = "Unable to create new Exercise. Please try again.";
        }
    }
}